<Window xmlns="https://github.com/avaloniaui"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:vm="clr-namespace:CrossPlatformDownloadManager.DesktopApp.Infrastructure.DialogBox.ViewModels"
        mc:Ignorable="d"
        d:DesignWidth="800"
        d:DesignHeight="450"
        x:Class="CrossPlatformDownloadManager.DesktopApp.Infrastructure.DialogBox.Views.DialogWindow"
        x:DataType="vm:DialogWindowViewModel"
        Icon="/Assets/Images/cdm-logo.ico"
        Title="CDM - Dialog"
        Width="450"
        Height="200"
        MinWidth="450"
        MinHeight="200"
        MaxWidth="450"
        MaxHeight="200"
        ExtendClientAreaChromeHints="NoChrome"
        ExtendClientAreaToDecorationsHint="False"
        ExtendClientAreaTitleBarHeightHint="-1"
        TransparencyLevelHint="Transparent"
        Background="{DynamicResource TransparentColor}"
        SystemDecorations="None"
        CanResize="False"
        ShowInTaskbar="False"
        Topmost="True"
        PointerPressed="WindowOnPointerPressed">

    <!-- Resources -->
    <Window.Resources>
        <ResourceDictionary>
            <!-- Dialog ok button on hover background color -->
            <SolidColorBrush x:Key="DialogOkButtonOnHoverColor"
                             Color="{DynamicResource DialogOkButtonColor}"
                             Opacity="0.9" />

            <!-- Dialog ok button on pressed background color -->
            <SolidColorBrush x:Key="DialogOkButtonOnPressedColor"
                             Color="{DynamicResource DialogOkButtonColor}"
                             Opacity="0.8" />

            <!-- Dialog yes button on hover background color -->
            <SolidColorBrush x:Key="DialogYesButtonOnHoverColor"
                             Color="{DynamicResource DialogYesButtonColor}"
                             Opacity="0.9" />

            <!-- Dialog yes button on pressed background color -->
            <SolidColorBrush x:Key="DialogYesButtonOnPressedColor"
                             Color="{DynamicResource DialogYesButtonColor}"
                             Opacity="0.8" />

            <!-- Dialog no button on hover background color -->
            <SolidColorBrush x:Key="DialogNoButtonOnHoverColor"
                             Color="{DynamicResource DialogNoButtonColor}"
                             Opacity="0.9" />

            <!-- Dialog no button on pressed background color -->
            <SolidColorBrush x:Key="DialogNoButtonOnPressedColor"
                             Color="{DynamicResource DialogNoButtonColor}"
                             Opacity="0.8" />

            <!-- Dialog cancel button on hover background color -->
            <SolidColorBrush x:Key="DialogCancelButtonOnHoverColor"
                             Color="{DynamicResource DialogCancelButtonColor}"
                             Opacity="0.9" />

            <!-- Dialog cancel button on pressed background color -->
            <SolidColorBrush x:Key="DialogCancelButtonOnPressedColor"
                             Color="{DynamicResource DialogCancelButtonColor}"
                             Opacity="0.8" />

            <!-- Footer background color -->
            <SolidColorBrush x:Key="FooterBackgroundColor"
                             Color="{DynamicResource PrimaryColor}"
                             Opacity="0.2" />
        </ResourceDictionary>
    </Window.Resources>

    <!-- Styles -->
    <Window.Styles>
        <!-- Dialog border style -->
        <Style Selector="Border.dialogBorder">
            <!-- Animation -->
            <Style.Animations>
                <Animation Duration="00:00:00.3">
                    <KeyFrame Cue="0%">
                        <Setter Property="Opacity"
                                Value="0.0" />
                    </KeyFrame>
                    <KeyFrame Cue="100%">
                        <Setter Property="Opacity"
                                Value="1.0" />
                    </KeyFrame>
                </Animation>
            </Style.Animations>

            <!-- Information styles -->
            <Style Selector="^.information">
                <Setter Property="Background"
                        Value="{DynamicResource InfoGradientBrush}" />
            </Style>

            <!-- Warning styles -->
            <Style Selector="^.warning">
                <Setter Property="Background"
                        Value="{DynamicResource WarningGradientBrush}" />
            </Style>

            <!-- Success styles -->
            <Style Selector="^.success">
                <Setter Property="Background"
                        Value="{DynamicResource SuccessGradientBrush}" />
            </Style>

            <!-- Danger styles -->
            <Style Selector="^.danger">
                <Setter Property="Background"
                        Value="{DynamicResource DangerGradientBrush}" />
            </Style>
        </Style>

        <!-- Dialog buttons styles -->
        <Style Selector="Button.dialogButton">
            <Setter Property="Padding"
                    Value="12, 10" />
            <Setter Property="Margin"
                    Value="0" />
            <Setter Property="BorderThickness"
                    Value="0" />
            <Setter Property="Background"
                    Value="{DynamicResource TransparentColor}" />
            <Setter Property="Foreground"
                    Value="{DynamicResource TextColor}" />
            <Setter Property="CornerRadius"
                    Value="{DynamicResource DefaultCornerRadius}" />

            <!-- Template -->
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Button">
                        <Border Background="{TemplateBinding Background}"
                                CornerRadius="{TemplateBinding CornerRadius}"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                ClipToBounds="{TemplateBinding ClipToBounds}">
                            <ContentPresenter Content="{TemplateBinding Content}"
                                              Margin="{TemplateBinding Padding}"
                                              Foreground="{TemplateBinding Foreground}"
                                              HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                              VerticalAlignment="{TemplateBinding VerticalContentAlignment}" />
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>

            <!-- Transitions -->
            <Setter Property="Transitions">
                <Setter.Value>
                    <Transitions>
                        <BrushTransition Property="Background"
                                         Duration="00:00:00.3" />

                        <DoubleTransition Property="Opacity"
                                          Duration="00:00:00.3" />
                    </Transitions>
                </Setter.Value>
            </Setter>

            <!-- Ok dialog button style -->
            <Style Selector="^.okButton">
                <Setter Property="Background"
                        Value="{DynamicResource DialogOkButtonColor}" />

                <Style Selector="^:pointerover">
                    <Setter Property="Background"
                            Value="{DynamicResource DialogOkButtonOnHoverColor}" />
                </Style>

                <Style Selector="^:pressed">
                    <Setter Property="Background"
                            Value="{DynamicResource DialogOkButtonOnPressedColor}" />
                </Style>
            </Style>

            <!-- Yes dialog button style -->
            <Style Selector="^.yesButton">
                <Setter Property="Background"
                        Value="{DynamicResource DialogYesButtonColor}" />

                <Style Selector="^:pointerover">
                    <Setter Property="Background"
                            Value="{DynamicResource DialogYesButtonOnHoverColor}" />
                </Style>

                <Style Selector="^:pressed">
                    <Setter Property="Background"
                            Value="{DynamicResource DialogYesButtonOnPressedColor}" />
                </Style>
            </Style>

            <!-- No dialog button style -->
            <Style Selector="^.noButton">
                <Setter Property="Background"
                        Value="{DynamicResource DialogNoButtonColor}" />

                <Style Selector="^:pointerover">
                    <Setter Property="Background"
                            Value="{DynamicResource DialogNoButtonOnHoverColor}" />
                </Style>

                <Style Selector="^:pressed">
                    <Setter Property="Background"
                            Value="{DynamicResource DialogNoButtonOnPressedColor}" />
                </Style>
            </Style>

            <!-- Cancel dialog button style -->
            <Style Selector="^.cancelButton">
                <Setter Property="Background"
                        Value="{DynamicResource DialogCancelButtonColor}" />

                <Style Selector="^:pointerover">
                    <Setter Property="Background"
                            Value="{DynamicResource DialogCancelButtonOnHoverColor}" />
                </Style>

                <Style Selector="^:pressed">
                    <Setter Property="Background"
                            Value="{DynamicResource DialogCancelButtonOnPressedColor}" />
                </Style>
            </Style>
        </Style>

        <!-- Helper action button style -->
        <Style Selector="Button.helperButton">
            <Setter Property="Padding"
                    Value="0" />
            <Setter Property="Margin"
                    Value="0" />
            <Setter Property="BorderThickness"
                    Value="0" />
            <Setter Property="Background"
                    Value="{DynamicResource TextColor}" />
            <Setter Property="Width"
                    Value="28" />
            <Setter Property="Height"
                    Value="28" />
            <Setter Property="CornerRadius"
                    Value="14" />
            <Setter Property="HorizontalContentAlignment"
                    Value="Center" />
            <Setter Property="VerticalContentAlignment"
                    Value="Center" />

            <!-- Template -->
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Button">
                        <Border Background="{TemplateBinding Background}"
                                CornerRadius="{TemplateBinding CornerRadius}"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                ClipToBounds="{TemplateBinding ClipToBounds}">
                            <ContentPresenter Content="{TemplateBinding Content}"
                                              Margin="{TemplateBinding Padding}"
                                              Foreground="{TemplateBinding Foreground}"
                                              HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                              VerticalAlignment="{TemplateBinding VerticalContentAlignment}" />
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
    </Window.Styles>

    <!-- Main content -->
    <Border Classes="dialogBorder"
            Classes.information="{Binding IsInformationDialog}"
            Classes.warning="{Binding IsWarningDialog}"
            Classes.success="{Binding IsSuccessDialog}"
            Classes.danger="{Binding IsDangerDialog}"
            CornerRadius="{DynamicResource DefaultCornerRadius}"
            ClipToBounds="True"
            BorderThickness="0">
        <Grid RowDefinitions="Auto, *, Auto">
            <!-- Dialog header -->
            <TextBlock Grid.Row="0"
                       Text="{Binding DialogHeader}"
                       FontWeight="Bold"
                       TextWrapping="Wrap"
                       Margin="20, 20, 20, 10" />

            <!-- Dialog message -->
            <ScrollViewer Grid.Row="1"
                          HorizontalScrollBarVisibility="Disabled"
                          VerticalScrollBarVisibility="Auto"
                          Margin="20, 0">
                <TextBlock Text="{Binding DialogMessage}"
                           TextWrapping="Wrap" />
            </ScrollViewer>

            <!-- Dialog footer -->
            <Border Grid.Row="2"
                    Margin="0, 10, 0, 0"
                    Background="{DynamicResource FooterBackgroundColor}"
                    Padding="20, 10">
                <Grid ColumnDefinitions="Auto, *">
                    <!-- Dialog helpers -->
                    <StackPanel Grid.Column="0"
                                Orientation="Horizontal"
                                Spacing="5"
                                Margin="0, 0, 10, 0">
                        <!-- Help button -->
                        <Button Classes="helperButton"
                                IsVisible="{Binding InfoMessageIsVisible}"
                                ToolTip.Tip="{Binding InfoMessage, TargetNullValue='', FallbackValue=''}">
                            <PathIcon Data="{DynamicResource InfoSvgIcon}"
                                      Foreground="{DynamicResource IconColor}"
                                      Width="16"
                                      Height="16" />
                        </Button>

                        <!-- Copy button -->
                        <Button Classes="helperButton"
                                Command="{Binding CopyToClipboardCommand}"
                                CommandParameter="{Binding $parent[Window]}"
                                IsVisible="{Binding CopyToClipboardButtonIsVisible}">
                            <PathIcon Data="{DynamicResource ClipboardSvgIcon}"
                                      Foreground="{DynamicResource IconColor}"
                                      Width="16"
                                      Height="16" />
                        </Button>
                    </StackPanel>

                    <!-- Dialog buttons -->
                    <StackPanel Grid.Column="1"
                                Orientation="Horizontal"
                                Spacing="10"
                                HorizontalAlignment="Right">
                        <!-- Ok button -->
                        <Button Content="Ok"
                                Classes="dialogButton okButton"
                                IsVisible="{Binding IsOkButtonVisible}"
                                Click="DialogButtonOnClick" />

                        <!-- Yes button -->
                        <Button Content="Yes"
                                Classes="dialogButton yesButton"
                                IsVisible="{Binding IsYesButtonVisible}"
                                Click="DialogButtonOnClick" />

                        <!-- No button -->
                        <Button Content="No"
                                Classes="dialogButton noButton"
                                IsVisible="{Binding IsNoButtonVisible}"
                                Click="DialogButtonOnClick" />

                        <!-- Cancel button -->
                        <Button Content="Cancel"
                                Classes="dialogButton cancelButton"
                                IsVisible="{Binding IsCancelButtonVisible}"
                                Click="DialogButtonOnClick" />
                    </StackPanel>
                </Grid>
            </Border>
        </Grid>
    </Border>
</Window>