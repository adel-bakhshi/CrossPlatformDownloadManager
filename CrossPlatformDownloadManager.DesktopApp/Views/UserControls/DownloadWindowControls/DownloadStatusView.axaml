<UserControl xmlns="https://github.com/avaloniaui"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
             xmlns:vm="using:CrossPlatformDownloadManager.DesktopApp.ViewModels.DownloadWindowViewModels"
             xmlns:converters="using:CrossPlatformDownloadManager.DesktopApp.Converters"
             mc:Ignorable="d"
             d:DesignWidth="800"
             d:DesignHeight="450"
             x:Class="CrossPlatformDownloadManager.DesktopApp.Views.UserControls.DownloadWindowControls.DownloadStatusView"
             x:DataType="vm:DownloadStatusViewModel">

    <!-- Resources -->
    <UserControl.Resources>
        <ResourceDictionary>
            <converters:CheckEqualConverter x:Key="CheckEqualConverter" />
        </ResourceDictionary>
    </UserControl.Resources>

    <!-- Styles -->
    <UserControl.Styles>
        <Style Selector="Button.saveLocation">
            <Setter Property="Cursor"
                    Value="Hand" />
            <Setter Property="Margin"
                    Value="0, 0, 0, 10" />
            <Setter Property="Padding"
                    Value="0" />
            <Setter Property="BorderThickness"
                    Value="0" />
            <Setter Property="CornerRadius"
                    Value="0" />
            <Setter Property="Background"
                    Value="{DynamicResource TransparentColor}" />
            <Setter Property="Foreground"
                    Value="{DynamicResource MainTextColor}" />
            <Setter Property="HorizontalContentAlignment"
                    Value="Left" />
            <Setter Property="VerticalContentAlignment"
                    Value="Center" />

            <!-- Transitions -->
            <Setter Property="Transitions">
                <Setter.Value>
                    <Transitions>
                        <BrushTransition Property="Foreground"
                                         Duration="00:00:00.3" />
                    </Transitions>
                </Setter.Value>
            </Setter>

            <!-- Template -->
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Button">
                        <Border Background="{TemplateBinding Background}"
                                CornerRadius="{TemplateBinding CornerRadius}"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="{TemplateBinding BorderThickness}">
                            <ContentPresenter Content="{TemplateBinding Content}"
                                              HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}"
                                              VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}" />
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>

            <!-- Pointer over styles -->
            <Style Selector="^:pointerover">
                <Setter Property="Foreground"
                        Value="{DynamicResource CategoryHoverColor}" />
            </Style>
        </Style>
    </UserControl.Styles>

    <!-- Main content -->
    <ScrollViewer HorizontalScrollBarVisibility="Disabled"
                  VerticalScrollBarVisibility="Auto">
        <Grid RowDefinitions="Auto, Auto, Auto, Auto, Auto, Auto, Auto, Auto, Auto"
              ColumnDefinitions="Auto, *"
              HorizontalAlignment="Stretch"
              VerticalAlignment="Stretch">
            <!-- Url -->
            <TextBlock Grid.Row="0"
                       Grid.Column="0"
                       Text="Url"
                       Margin="0, 0, 15, 10" />

            <TextBlock Grid.Row="0"
                       Grid.Column="1"
                       Text="{Binding DownloadFile.Url, FallbackValue='', TargetNullValue=''}"
                       Margin="0, 0, 0, 10"
                       TextTrimming="CharacterEllipsis"
                       ToolTip.Tip="{Binding DownloadFile.Url, FallbackValue='', TargetNullValue=''}" />

            <!-- Name -->
            <TextBlock Grid.Row="1"
                       Grid.Column="0"
                       Text="Name"
                       Margin="0, 0, 15, 10" />

            <TextBlock Grid.Row="1"
                       Grid.Column="1"
                       Text="{Binding DownloadFile.FileName, FallbackValue='', TargetNullValue=''}"
                       Margin="0, 0, 0, 10"
                       TextTrimming="CharacterEllipsis"
                       ToolTip.Tip="{Binding DownloadFile.FileName, FallbackValue='', TargetNullValue=''}" />

            <!-- Save Location -->
            <TextBlock Grid.Row="2"
                       Grid.Column="0"
                       Text="Save location"
                       Margin="0, 0, 15, 10" />

            <Button Grid.Row="2"
                    Grid.Column="1"
                    Content="{Binding DownloadFile.SaveLocation, FallbackValue='', TargetNullValue=''}"
                    Classes="saveLocation"
                    Command="{Binding OpenSaveLocationCommand}" />

            <!-- Size -->
            <TextBlock Grid.Row="3"
                       Grid.Column="0"
                       Text="Size"
                       Margin="0, 0, 15, 10" />

            <TextBlock Grid.Row="3"
                       Grid.Column="1"
                       Text="{Binding DownloadFile.SizeAsString, FallbackValue='', TargetNullValue=''}"
                       Margin="0, 0, 0, 10" />

            <!-- Downloaded -->
            <TextBlock Grid.Row="4"
                       Grid.Column="0"
                       Text="Downloaded"
                       Margin="0, 0, 15, 10" />

            <StackPanel Grid.Row="4"
                        Grid.Column="1"
                        Orientation="Horizontal"
                        Spacing="5"
                        Margin="0, 0, 0, 10">
                <TextBlock Text="{Binding DownloadFile.DownloadProgressAsString, FallbackValue='', TargetNullValue=''}" />
                <TextBlock Text="{Binding DownloadFile.DownloadedSizeAsString, FallbackValue='', TargetNullValue=''}" />
            </StackPanel>

            <!-- Speed -->
            <TextBlock Grid.Row="5"
                       Grid.Column="0"
                       Text="Speed"
                       Margin="0, 0, 15, 10" />

            <TextBlock Grid.Row="5"
                       Grid.Column="1"
                       Text="{Binding DownloadFile.TransferRateAsString, FallbackValue='', TargetNullValue=''}"
                       Margin="0, 0, 0, 10" />

            <!-- Elapsed Time -->
            <TextBlock Grid.Row="6"
                       Grid.Column="0"
                       Text="Elapsed time"
                       Margin="0, 0, 15, 10" />

            <TextBlock Grid.Row="6"
                       Grid.Column="1"
                       Text="{Binding DownloadFile.ElapsedTimeAsString, FallbackValue='', TargetNullValue=''}"
                       Margin="0, 0, 0, 10" />

            <!-- Time Left -->
            <TextBlock Grid.Row="7"
                       Grid.Column="0"
                       Text="Time left"
                       Margin="0, 0, 15, 10" />

            <TextBlock Grid.Row="7"
                       Grid.Column="1"
                       Text="{Binding DownloadFile.TimeLeftAsString, FallbackValue='', TargetNullValue=''}"
                       Margin="0, 0, 0, 10" />

            <!-- Resume Capability -->
            <TextBlock Grid.Row="8"
                       Grid.Column="0"
                       Text="Resume capability"
                       Margin="0, 0, 15, 0" />

            <TextBlock Grid.Row="8"
                       Grid.Column="1"
                       Text="{Binding ResumeCapabilityState}"
                       Classes.resumeCapabilityIsAvailable="{Binding ResumeCapabilityState, Converter={StaticResource CheckEqualConverter}, ConverterParameter='Yes'}"
                       Classes.resumeCapabilityIsUnavailable="{Binding ResumeCapabilityState, Converter={StaticResource CheckEqualConverter}, ConverterParameter='No'}">
                <!-- Styles -->
                <TextBlock.Styles>
                    <Style Selector="TextBlock">
                        <Setter Property="Foreground"
                                Value="{DynamicResource InfoColor}" />

                        <!-- Resume capability is available style -->
                        <Style Selector="^.resumeCapabilityIsAvailable">
                            <Setter Property="Foreground"
                                    Value="{DynamicResource SuccessColor}" />
                        </Style>

                        <!-- Resume capability is unavailable style -->
                        <Style Selector="^.resumeCapabilityIsUnavailable">
                            <Setter Property="Foreground"
                                    Value="{DynamicResource DangerColor}" />
                        </Style>
                    </Style>
                </TextBlock.Styles>
            </TextBlock>
        </Grid>
    </ScrollViewer>
</UserControl>