<UserControl xmlns="https://github.com/avaloniaui"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
             xmlns:cc="using:CrossPlatformDownloadManager.DesktopApp.CustomControls"
             xmlns:vm="using:CrossPlatformDownloadManager.DesktopApp.ViewModels.SettingsWindowViewModels"
             xmlns:local="using:CrossPlatformDownloadManager.DesktopApp.Views.UserControls.SettingsWindowControls"
             mc:Ignorable="d"
             d:DesignWidth="800"
             d:DesignHeight="450"
             x:Class="CrossPlatformDownloadManager.DesktopApp.Views.UserControls.SettingsWindowControls.FileTypesView"
             x:DataType="vm:FileTypesViewModel">
    
    <!-- Content -->
    <Border CornerRadius="{DynamicResource DefaultCornerRadius}"
            Padding="15"
            Background="{DynamicResource SecondaryBackgroundColor}">
        <Grid RowDefinitions="Auto, Auto, *">
            <!-- Title -->
            <TextBlock Grid.Row="0"
                       HorizontalAlignment="Stretch"
                       VerticalAlignment="Center"
                       TextAlignment="Left"
                       Text="Manage file types"
                       FontWeight="Bold"
                       Margin="0, 0, 0, 10" />

            <!-- DataGrid Actions -->
            <Grid Grid.Row="1"
                  ColumnDefinitions="*, Auto"
                  Margin="0, 0, 0, 10">
                <!-- Search -->
                <cc:CustomTextBox Grid.Column="0"
                                  Width="250"
                                  Background="{DynamicResource MainBackgroundColor}"
                                  Watermark="Search file type"
                                  WatermarkForeground="{DynamicResource AccentColor}"
                                  CornerRadius="{DynamicResource DefaultCornerRadius}"
                                  IconData="{DynamicResource MagnifyingGlassSvgIcon}"
                                  IconColor="{DynamicResource IconColor}"
                                  IconSize="{DynamicResource SmallIconSize}"
                                  Padding="12, 10"
                                  HorizontalAlignment="Left"
                                  VerticalAlignment="Center"
                                  OnFocusBorderColor="{DynamicResource MainBackgroundColor}"
                                  OnHoverBorderColor="{DynamicResource MainBackgroundColor}"
                                  BorderThickness="1"
                                  BorderBrush="{DynamicResource MainBackgroundColor}"
                                  Text="{Binding SearchText}" />

                <!-- Action buttons -->
                <StackPanel Grid.Column="1"
                            Orientation="Horizontal"
                            Spacing="10"
                            HorizontalAlignment="Right">
                    <Button Classes="button danger"
                            Height="{Binding $parent[StackPanel].Bounds.Height}"
                            Width="{Binding $self.Bounds.Height}"
                            VerticalAlignment="Center"
                            Command="{Binding DeleteFileTypeCommand}"
                            IsEnabled="{Binding SelectedFileExtension, Converter={x:Static ObjectConverters.IsNotNull}}">
                        <PathIcon Data="{DynamicResource XMarkSvgIcon}"
                                  Foreground="{DynamicResource ButtonTextColor}"
                                  Width="{DynamicResource SmallIconSize}"
                                  Height="{DynamicResource SmallIconSize}"
                                  HorizontalAlignment="Center"
                                  VerticalAlignment="Center" />
                    </Button>

                    <Button Classes="button warning"
                            Height="{Binding $parent[StackPanel].Bounds.Height}"
                            Width="{Binding $self.Bounds.Height}"
                            VerticalAlignment="Center"
                            Command="{Binding EditFileTypeCommand}"
                            CommandParameter="{Binding $parent[Window]}"
                            IsEnabled="{Binding SelectedFileExtension, Converter={x:Static ObjectConverters.IsNotNull}}">
                        <PathIcon Data="{DynamicResource PenSvgIcon}"
                                  Foreground="{DynamicResource ButtonTextColor}"
                                  Width="{DynamicResource SmallIconSize}"
                                  Height="{DynamicResource SmallIconSize}"
                                  HorizontalAlignment="Center"
                                  VerticalAlignment="Center" />
                    </Button>

                    <Button Classes="button success"
                            Height="{Binding $parent[StackPanel].Bounds.Height}"
                            Width="{Binding $self.Bounds.Height}"
                            VerticalAlignment="Center"
                            Command="{Binding AddNewFileTypeCommand}"
                            CommandParameter="{Binding $parent[Window]}">
                        <PathIcon Data="{DynamicResource PlusSvgIcon}"
                                  Foreground="{DynamicResource ButtonTextColor}"
                                  Width="{DynamicResource SmallIconSize}"
                                  Height="{DynamicResource SmallIconSize}"
                                  HorizontalAlignment="Center"
                                  VerticalAlignment="Center" />
                    </Button>
                </StackPanel>
            </Grid>

            <!-- File types DataGrid -->
            <DataGrid Grid.Row="2"
                      ItemsSource="{Binding FileExtensions}"
                      SelectedItem="{Binding SelectedFileExtension}"
                      Classes="minimalDataGrid darkRows"
                      SelectionMode="Single"
                      Height="{Binding $parent[local:FileTypesView].DataGridHeight}"
                      Background="{DynamicResource TransparentColor}">
                <DataGrid.Columns>
                    <DataGridTextColumn Header="Extension"
                                        Binding="{Binding Extension}"
                                        MinWidth="200"
                                        IsVisible="{Binding !$parent[local:FileTypesView].((vm:FileTypesViewModel)DataContext).DependsOnCategory, FallbackValue=False, TargetNullValue=False}" />

                    <DataGridTextColumn Header="Alias"
                                        Binding="{Binding Alias}"
                                        MinWidth="200"
                                        IsVisible="{Binding !$parent[local:FileTypesView].((vm:FileTypesViewModel)DataContext).DependsOnCategory, FallbackValue=False, TargetNullValue=False}" />

                    <DataGridTextColumn Header="Category"
                                        Binding="{Binding Category.Title, FallbackValue='', TargetNullValue=''}"
                                        MinWidth="200"
                                        IsVisible="{Binding !$parent[local:FileTypesView].((vm:FileTypesViewModel)DataContext).DependsOnCategory, FallbackValue=False, TargetNullValue=False}" />

                    <DataGridTextColumn Header="Extension"
                                        Binding="{Binding Extension}"
                                        MinWidth="300"
                                        IsVisible="{Binding $parent[local:FileTypesView].((vm:FileTypesViewModel)DataContext).DependsOnCategory, FallbackValue=False, TargetNullValue=False}" />

                    <DataGridTextColumn Header="Alias"
                                        Binding="{Binding Alias}"
                                        MinWidth="300"
                                        IsVisible="{Binding $parent[local:FileTypesView].((vm:FileTypesViewModel)DataContext).DependsOnCategory, FallbackValue=False, TargetNullValue=False}" />
                </DataGrid.Columns>
            </DataGrid>
        </Grid>
    </Border>
</UserControl>